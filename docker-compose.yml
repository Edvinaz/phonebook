version: "3.7"

networks:
  phonebook:
    name: phonebook

services:
  php.phonebook:
    build: ./.docker/php
    container_name: phonebook_php
    restart: "no"
    networks:
      - phonebook
    ports:
      - 9001:9000
    volumes:
      - "./:/var/www:cached"
    links:
      - mariadb.phonebook

  nginx.phonebook:
    build: ./.docker/nginx
    container_name: 'phonebook_nginx'
    restart: "no"
    networks:
      - phonebook
    ports:
      - "8088:8080"
    volumes:
      - "./:/var/www/:cached"
      - "./.docker/logs/nginx:/var/log/nginx:cached"
    depends_on:
      - php.phonebook

  mariadb.phonebook:
    image: mariadb:10.3.8
    container_name: 'phonebook_mariadb'
    environment:
      MYSQL_ROOT_PASSWORD: 'root'
      MYSQL_USER: 'phonebook'
      MYSQL_PASSWORD: 'secretpassword'
      MYSQL_DATABASE: 'phonebook'
    networks:
      - phonebook
    ports:
      - '3399:3306'
    volumes:
      - './.docker/mariadb/mysql:/var/lib/mysql'

  react.phonebook:
    build:
      context: .
      dockerfile: ./.docker/react/Dockerfile
    container_name: phonebook_react
    volumes:
      - ./react:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3000:3000"
    working_dir: /usr/src/app
    command: [ "npm", "start" ]
    environment:
      - CHOKIDAR_USEPOLLING=true


###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
